name: CD

on:
  push:
    branches: [ main ]   # Deploy automatically when code is merged into main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Needed for OIDC authentication
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::282011215016:role/GitHubOIDCRole   # ðŸ‘ˆ Your account ID included
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: terraform -chdir=infra plan

      - name: Terraform Apply
        run: terraform -chdir=infra apply -auto-approve

      - name: Package Lambda
        run: |
          cd lambda
          zip -r ../lambda_package.zip .

      - name: Get Lambda Function Name
        id: lambda-name
        run: |
          LAMBDA_NAME=$(terraform -chdir=infra output -json lambda_function_name | jq -r .)
          echo "lambda_name=$LAMBDA_NAME" >> $GITHUB_OUTPUT

      - name: Update Lambda Function
        run: |
          LAMBDA_NAME="${{ steps.lambda-name.outputs.lambda_name }}"
          if aws lambda get-function --function-name "$LAMBDA_NAME" >/dev/null 2>&1; then
            aws lambda update-function-code \
              --function-name "$LAMBDA_NAME" \
              --zip-file fileb://lambda_package.zip
            echo "Updated Lambda function: $LAMBDA_NAME"
          else
            echo "Lambda function $LAMBDA_NAME not found"
            exit 1
          fi
